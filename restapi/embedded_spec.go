// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Tell's joke for individual",
    "title": "Individual Joke Teller API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/": {
      "x-swagger-router-controller": "IndividualJoke",
      "get": {
        "description": "Returns joke for individual person.",
        "summary": "Display joke for random person",
        "operationId": "listJoke",
        "responses": {
          "200": {
            "description": "Returns requested Entities.",
            "schema": {
              "$ref": "#/definitions/IndividualWithJoke"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Individual": {
      "type": "object",
      "properties": {
        "Region": {
          "type": "string",
          "x-omitempty": true
        },
        "gender": {
          "type": "string",
          "enum": [
            "Male",
            "Female",
            "Transgender",
            "N/A"
          ],
          "x-omitempty": true
        },
        "joke": {
          "$ref": "#/definitions/Joke"
        },
        "name": {
          "type": "string",
          "x-omitempty": true
        },
        "surname": {
          "type": "string",
          "x-omitempty": true
        }
      }
    },
    "IndividualWithJoke": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Individual"
        }
      ],
      "properties": {
        "joke": {
          "$ref": "#/definitions/Joke"
        }
      }
    },
    "Joke": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-omitempty": true
        },
        "value": {
          "$ref": "#/definitions/JokeDetail"
        }
      }
    },
    "JokeDetail": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "x-omitempty": true
        },
        "joke": {
          "type": "string",
          "x-omitempty": true
        }
      }
    }
  },
  "x-servers": [
    {
      "description": "Local API Gateway (https)",
      "url": "https://localhost:500/person-joke"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Tell's joke for individual",
    "title": "Individual Joke Teller API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/": {
      "x-swagger-router-controller": "IndividualJoke",
      "get": {
        "description": "Returns joke for individual person.",
        "summary": "Display joke for random person",
        "operationId": "listJoke",
        "responses": {
          "200": {
            "description": "Returns requested Entities.",
            "schema": {
              "$ref": "#/definitions/IndividualWithJoke"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Individual": {
      "type": "object",
      "properties": {
        "Region": {
          "type": "string",
          "x-omitempty": true
        },
        "gender": {
          "type": "string",
          "enum": [
            "Male",
            "Female",
            "Transgender",
            "N/A"
          ],
          "x-omitempty": true
        },
        "joke": {
          "$ref": "#/definitions/Joke"
        },
        "name": {
          "type": "string",
          "x-omitempty": true
        },
        "surname": {
          "type": "string",
          "x-omitempty": true
        }
      }
    },
    "IndividualWithJoke": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Individual"
        }
      ],
      "properties": {
        "joke": {
          "$ref": "#/definitions/Joke"
        }
      }
    },
    "Joke": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "x-omitempty": true
        },
        "value": {
          "$ref": "#/definitions/JokeDetail"
        }
      }
    },
    "JokeDetail": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "x-omitempty": true
        },
        "joke": {
          "type": "string",
          "x-omitempty": true
        }
      }
    }
  },
  "x-servers": [
    {
      "description": "Local API Gateway (https)",
      "url": "https://localhost:500/person-joke"
    }
  ]
}`))
}
